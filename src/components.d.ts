/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CoreprojectLogoAnimeCore {
        "_style": string;
        "height": string;
        "width": string;
    }
    interface CoreprojectLogoDiscord {
        "_style": string;
        "height": string;
        "width": string;
    }
    interface CoreprojectLogoGithub {
        "_style": string;
        "height": string;
        "width": string;
    }
    interface CoreprojectLogoReddit {
        "_style": string;
        "height": string;
        "width": string;
    }
    interface CoreprojectLogoTelegram {
        "_style": string;
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeAirplay {
        "_style": string;
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeAlertTriangle {
        "_style": string;
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeAlign {
        "_style": string;
        "height": string;
        "variant": 'center' | 'justify' | 'left' | 'right';
        "width": string;
    }
    interface CoreprojectShapeArrow {
        "_style": string;
        "height": string;
        "variant": 'down' | 'down-left' | 'down-right' | 'left' | 'right' | 'up' | 'up-left' | 'up-right';
        "width": string;
    }
    interface CoreprojectShapeAtSign {
        "_style": string;
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeAward {
        "_style": string;
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeBarChart {
        "_style": string;
        "height": string;
        "width": string;
    }
}
declare global {
    interface HTMLCoreprojectLogoAnimeCoreElement extends Components.CoreprojectLogoAnimeCore, HTMLStencilElement {
    }
    var HTMLCoreprojectLogoAnimeCoreElement: {
        prototype: HTMLCoreprojectLogoAnimeCoreElement;
        new (): HTMLCoreprojectLogoAnimeCoreElement;
    };
    interface HTMLCoreprojectLogoDiscordElement extends Components.CoreprojectLogoDiscord, HTMLStencilElement {
    }
    var HTMLCoreprojectLogoDiscordElement: {
        prototype: HTMLCoreprojectLogoDiscordElement;
        new (): HTMLCoreprojectLogoDiscordElement;
    };
    interface HTMLCoreprojectLogoGithubElement extends Components.CoreprojectLogoGithub, HTMLStencilElement {
    }
    var HTMLCoreprojectLogoGithubElement: {
        prototype: HTMLCoreprojectLogoGithubElement;
        new (): HTMLCoreprojectLogoGithubElement;
    };
    interface HTMLCoreprojectLogoRedditElement extends Components.CoreprojectLogoReddit, HTMLStencilElement {
    }
    var HTMLCoreprojectLogoRedditElement: {
        prototype: HTMLCoreprojectLogoRedditElement;
        new (): HTMLCoreprojectLogoRedditElement;
    };
    interface HTMLCoreprojectLogoTelegramElement extends Components.CoreprojectLogoTelegram, HTMLStencilElement {
    }
    var HTMLCoreprojectLogoTelegramElement: {
        prototype: HTMLCoreprojectLogoTelegramElement;
        new (): HTMLCoreprojectLogoTelegramElement;
    };
    interface HTMLCoreprojectShapeAirplayElement extends Components.CoreprojectShapeAirplay, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeAirplayElement: {
        prototype: HTMLCoreprojectShapeAirplayElement;
        new (): HTMLCoreprojectShapeAirplayElement;
    };
    interface HTMLCoreprojectShapeAlertTriangleElement extends Components.CoreprojectShapeAlertTriangle, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeAlertTriangleElement: {
        prototype: HTMLCoreprojectShapeAlertTriangleElement;
        new (): HTMLCoreprojectShapeAlertTriangleElement;
    };
    interface HTMLCoreprojectShapeAlignElement extends Components.CoreprojectShapeAlign, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeAlignElement: {
        prototype: HTMLCoreprojectShapeAlignElement;
        new (): HTMLCoreprojectShapeAlignElement;
    };
    interface HTMLCoreprojectShapeArrowElement extends Components.CoreprojectShapeArrow, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeArrowElement: {
        prototype: HTMLCoreprojectShapeArrowElement;
        new (): HTMLCoreprojectShapeArrowElement;
    };
    interface HTMLCoreprojectShapeAtSignElement extends Components.CoreprojectShapeAtSign, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeAtSignElement: {
        prototype: HTMLCoreprojectShapeAtSignElement;
        new (): HTMLCoreprojectShapeAtSignElement;
    };
    interface HTMLCoreprojectShapeAwardElement extends Components.CoreprojectShapeAward, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeAwardElement: {
        prototype: HTMLCoreprojectShapeAwardElement;
        new (): HTMLCoreprojectShapeAwardElement;
    };
    interface HTMLCoreprojectShapeBarChartElement extends Components.CoreprojectShapeBarChart, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeBarChartElement: {
        prototype: HTMLCoreprojectShapeBarChartElement;
        new (): HTMLCoreprojectShapeBarChartElement;
    };
    interface HTMLElementTagNameMap {
        "coreproject-logo-anime-core": HTMLCoreprojectLogoAnimeCoreElement;
        "coreproject-logo-discord": HTMLCoreprojectLogoDiscordElement;
        "coreproject-logo-github": HTMLCoreprojectLogoGithubElement;
        "coreproject-logo-reddit": HTMLCoreprojectLogoRedditElement;
        "coreproject-logo-telegram": HTMLCoreprojectLogoTelegramElement;
        "coreproject-shape-airplay": HTMLCoreprojectShapeAirplayElement;
        "coreproject-shape-alert-triangle": HTMLCoreprojectShapeAlertTriangleElement;
        "coreproject-shape-align": HTMLCoreprojectShapeAlignElement;
        "coreproject-shape-arrow": HTMLCoreprojectShapeArrowElement;
        "coreproject-shape-at-sign": HTMLCoreprojectShapeAtSignElement;
        "coreproject-shape-award": HTMLCoreprojectShapeAwardElement;
        "coreproject-shape-bar-chart": HTMLCoreprojectShapeBarChartElement;
    }
}
declare namespace LocalJSX {
    interface CoreprojectLogoAnimeCore {
        "_style"?: string;
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectLogoDiscord {
        "_style"?: string;
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectLogoGithub {
        "_style"?: string;
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectLogoReddit {
        "_style"?: string;
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectLogoTelegram {
        "_style"?: string;
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeAirplay {
        "_style"?: string;
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeAlertTriangle {
        "_style"?: string;
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeAlign {
        "_style"?: string;
        "height"?: string;
        "variant"?: 'center' | 'justify' | 'left' | 'right';
        "width"?: string;
    }
    interface CoreprojectShapeArrow {
        "_style"?: string;
        "height"?: string;
        "variant"?: 'down' | 'down-left' | 'down-right' | 'left' | 'right' | 'up' | 'up-left' | 'up-right';
        "width"?: string;
    }
    interface CoreprojectShapeAtSign {
        "_style"?: string;
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeAward {
        "_style"?: string;
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeBarChart {
        "_style"?: string;
        "height"?: string;
        "width"?: string;
    }
    interface IntrinsicElements {
        "coreproject-logo-anime-core": CoreprojectLogoAnimeCore;
        "coreproject-logo-discord": CoreprojectLogoDiscord;
        "coreproject-logo-github": CoreprojectLogoGithub;
        "coreproject-logo-reddit": CoreprojectLogoReddit;
        "coreproject-logo-telegram": CoreprojectLogoTelegram;
        "coreproject-shape-airplay": CoreprojectShapeAirplay;
        "coreproject-shape-alert-triangle": CoreprojectShapeAlertTriangle;
        "coreproject-shape-align": CoreprojectShapeAlign;
        "coreproject-shape-arrow": CoreprojectShapeArrow;
        "coreproject-shape-at-sign": CoreprojectShapeAtSign;
        "coreproject-shape-award": CoreprojectShapeAward;
        "coreproject-shape-bar-chart": CoreprojectShapeBarChart;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "coreproject-logo-anime-core": LocalJSX.CoreprojectLogoAnimeCore & JSXBase.HTMLAttributes<HTMLCoreprojectLogoAnimeCoreElement>;
            "coreproject-logo-discord": LocalJSX.CoreprojectLogoDiscord & JSXBase.HTMLAttributes<HTMLCoreprojectLogoDiscordElement>;
            "coreproject-logo-github": LocalJSX.CoreprojectLogoGithub & JSXBase.HTMLAttributes<HTMLCoreprojectLogoGithubElement>;
            "coreproject-logo-reddit": LocalJSX.CoreprojectLogoReddit & JSXBase.HTMLAttributes<HTMLCoreprojectLogoRedditElement>;
            "coreproject-logo-telegram": LocalJSX.CoreprojectLogoTelegram & JSXBase.HTMLAttributes<HTMLCoreprojectLogoTelegramElement>;
            "coreproject-shape-airplay": LocalJSX.CoreprojectShapeAirplay & JSXBase.HTMLAttributes<HTMLCoreprojectShapeAirplayElement>;
            "coreproject-shape-alert-triangle": LocalJSX.CoreprojectShapeAlertTriangle & JSXBase.HTMLAttributes<HTMLCoreprojectShapeAlertTriangleElement>;
            "coreproject-shape-align": LocalJSX.CoreprojectShapeAlign & JSXBase.HTMLAttributes<HTMLCoreprojectShapeAlignElement>;
            "coreproject-shape-arrow": LocalJSX.CoreprojectShapeArrow & JSXBase.HTMLAttributes<HTMLCoreprojectShapeArrowElement>;
            "coreproject-shape-at-sign": LocalJSX.CoreprojectShapeAtSign & JSXBase.HTMLAttributes<HTMLCoreprojectShapeAtSignElement>;
            "coreproject-shape-award": LocalJSX.CoreprojectShapeAward & JSXBase.HTMLAttributes<HTMLCoreprojectShapeAwardElement>;
            "coreproject-shape-bar-chart": LocalJSX.CoreprojectShapeBarChart & JSXBase.HTMLAttributes<HTMLCoreprojectShapeBarChartElement>;
        }
    }
}
