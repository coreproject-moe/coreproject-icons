/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CoreprojectLogoAnimeCore {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectLogoDiscord {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectLogoGithub {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectLogoReddit {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectLogoTelegram {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeAdd {
        "_style": { [key: string]: string };
        "height": string;
        "variant": 'outline' | 'fill';
        "width": string;
    }
    interface CoreprojectShapeArrow {
        "_style": { [key: string]: string };
        "height": string;
        "variant": 'outline' | 'fill';
        "width": string;
    }
    interface CoreprojectShapeArrowUpRight {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeBold {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeBookOpen {
        "_style": { [key: string]: string };
        "height": string;
        "variant": 'open' | 'outline';
        "width": string;
    }
    interface CoreprojectShapeBookmark {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeCaption {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeChat {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeChevron {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeChevronUpDown {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeCircle {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeCode {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeCross {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeDelete {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeDice {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeDot {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeDoubleArrow {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeDownload {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeEdit {
        "_style": { [key: string]: string };
        "height": string;
        "variant": 'with_underline_around_pencil' | 'without_underline_around_pencil';
        "width": string;
    }
    interface CoreprojectShapeEmptyUpload {
        "_style": { [key: string]: string };
        "height": string;
        "variant": 'with_underline_around_pencil' | 'without_underline_around_pencil';
        "width": string;
    }
    interface CoreprojectShapeExpand {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeExplore {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeExternal {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeExternalLink {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeFilter {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeForum {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeFourBoxSquares {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeFunnel {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeHeadphone {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeHeart {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeHome {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeHyperlink {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeInfo {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeItalic {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeLanguage {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeList {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeListen {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeLogin {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeLogo {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeMaximize {
        "_style": { [key: string]: string };
        "height": string;
        "variant": 'inward' | 'outward';
        "width": string;
    }
    interface CoreprojectShapeMessageCircle {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeMic {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeMisc {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeMoon {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeMoreBox {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeMoreVertical {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeNext {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeNotifications {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapePlay {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapePlayCircle {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapePreference {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeRead {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeRecent {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeRefresh {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeRegister {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeSchedule {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeSearch {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeSettings {
        "_style": { [key: string]: string };
        "height": string;
        "varient": 'filled' | 'outline';
        "width": string;
    }
    interface CoreprojectShapeShare {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeSixGrids {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeStar {
        "_style": { [key: string]: string };
        "fill_color": string;
        "height": string;
        "variant": 'empty' | 'half' | 'full';
        "width": string;
    }
    interface CoreprojectShapeStrike {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeTick {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeTrendingUp {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeUnderline {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeUpload {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeUser {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeVideo {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectShapeWarning {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
    interface CoreprojectSpecialTopRounded {
        "_style": { [key: string]: string };
        "height": string;
        "width": string;
    }
}
declare global {
    interface HTMLCoreprojectLogoAnimeCoreElement extends Components.CoreprojectLogoAnimeCore, HTMLStencilElement {
    }
    var HTMLCoreprojectLogoAnimeCoreElement: {
        prototype: HTMLCoreprojectLogoAnimeCoreElement;
        new (): HTMLCoreprojectLogoAnimeCoreElement;
    };
    interface HTMLCoreprojectLogoDiscordElement extends Components.CoreprojectLogoDiscord, HTMLStencilElement {
    }
    var HTMLCoreprojectLogoDiscordElement: {
        prototype: HTMLCoreprojectLogoDiscordElement;
        new (): HTMLCoreprojectLogoDiscordElement;
    };
    interface HTMLCoreprojectLogoGithubElement extends Components.CoreprojectLogoGithub, HTMLStencilElement {
    }
    var HTMLCoreprojectLogoGithubElement: {
        prototype: HTMLCoreprojectLogoGithubElement;
        new (): HTMLCoreprojectLogoGithubElement;
    };
    interface HTMLCoreprojectLogoRedditElement extends Components.CoreprojectLogoReddit, HTMLStencilElement {
    }
    var HTMLCoreprojectLogoRedditElement: {
        prototype: HTMLCoreprojectLogoRedditElement;
        new (): HTMLCoreprojectLogoRedditElement;
    };
    interface HTMLCoreprojectLogoTelegramElement extends Components.CoreprojectLogoTelegram, HTMLStencilElement {
    }
    var HTMLCoreprojectLogoTelegramElement: {
        prototype: HTMLCoreprojectLogoTelegramElement;
        new (): HTMLCoreprojectLogoTelegramElement;
    };
    interface HTMLCoreprojectShapeAddElement extends Components.CoreprojectShapeAdd, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeAddElement: {
        prototype: HTMLCoreprojectShapeAddElement;
        new (): HTMLCoreprojectShapeAddElement;
    };
    interface HTMLCoreprojectShapeArrowElement extends Components.CoreprojectShapeArrow, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeArrowElement: {
        prototype: HTMLCoreprojectShapeArrowElement;
        new (): HTMLCoreprojectShapeArrowElement;
    };
    interface HTMLCoreprojectShapeArrowUpRightElement extends Components.CoreprojectShapeArrowUpRight, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeArrowUpRightElement: {
        prototype: HTMLCoreprojectShapeArrowUpRightElement;
        new (): HTMLCoreprojectShapeArrowUpRightElement;
    };
    interface HTMLCoreprojectShapeBoldElement extends Components.CoreprojectShapeBold, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeBoldElement: {
        prototype: HTMLCoreprojectShapeBoldElement;
        new (): HTMLCoreprojectShapeBoldElement;
    };
    interface HTMLCoreprojectShapeBookOpenElement extends Components.CoreprojectShapeBookOpen, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeBookOpenElement: {
        prototype: HTMLCoreprojectShapeBookOpenElement;
        new (): HTMLCoreprojectShapeBookOpenElement;
    };
    interface HTMLCoreprojectShapeBookmarkElement extends Components.CoreprojectShapeBookmark, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeBookmarkElement: {
        prototype: HTMLCoreprojectShapeBookmarkElement;
        new (): HTMLCoreprojectShapeBookmarkElement;
    };
    interface HTMLCoreprojectShapeCaptionElement extends Components.CoreprojectShapeCaption, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeCaptionElement: {
        prototype: HTMLCoreprojectShapeCaptionElement;
        new (): HTMLCoreprojectShapeCaptionElement;
    };
    interface HTMLCoreprojectShapeChatElement extends Components.CoreprojectShapeChat, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeChatElement: {
        prototype: HTMLCoreprojectShapeChatElement;
        new (): HTMLCoreprojectShapeChatElement;
    };
    interface HTMLCoreprojectShapeChevronElement extends Components.CoreprojectShapeChevron, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeChevronElement: {
        prototype: HTMLCoreprojectShapeChevronElement;
        new (): HTMLCoreprojectShapeChevronElement;
    };
    interface HTMLCoreprojectShapeChevronUpDownElement extends Components.CoreprojectShapeChevronUpDown, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeChevronUpDownElement: {
        prototype: HTMLCoreprojectShapeChevronUpDownElement;
        new (): HTMLCoreprojectShapeChevronUpDownElement;
    };
    interface HTMLCoreprojectShapeCircleElement extends Components.CoreprojectShapeCircle, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeCircleElement: {
        prototype: HTMLCoreprojectShapeCircleElement;
        new (): HTMLCoreprojectShapeCircleElement;
    };
    interface HTMLCoreprojectShapeCodeElement extends Components.CoreprojectShapeCode, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeCodeElement: {
        prototype: HTMLCoreprojectShapeCodeElement;
        new (): HTMLCoreprojectShapeCodeElement;
    };
    interface HTMLCoreprojectShapeCrossElement extends Components.CoreprojectShapeCross, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeCrossElement: {
        prototype: HTMLCoreprojectShapeCrossElement;
        new (): HTMLCoreprojectShapeCrossElement;
    };
    interface HTMLCoreprojectShapeDeleteElement extends Components.CoreprojectShapeDelete, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeDeleteElement: {
        prototype: HTMLCoreprojectShapeDeleteElement;
        new (): HTMLCoreprojectShapeDeleteElement;
    };
    interface HTMLCoreprojectShapeDiceElement extends Components.CoreprojectShapeDice, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeDiceElement: {
        prototype: HTMLCoreprojectShapeDiceElement;
        new (): HTMLCoreprojectShapeDiceElement;
    };
    interface HTMLCoreprojectShapeDotElement extends Components.CoreprojectShapeDot, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeDotElement: {
        prototype: HTMLCoreprojectShapeDotElement;
        new (): HTMLCoreprojectShapeDotElement;
    };
    interface HTMLCoreprojectShapeDoubleArrowElement extends Components.CoreprojectShapeDoubleArrow, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeDoubleArrowElement: {
        prototype: HTMLCoreprojectShapeDoubleArrowElement;
        new (): HTMLCoreprojectShapeDoubleArrowElement;
    };
    interface HTMLCoreprojectShapeDownloadElement extends Components.CoreprojectShapeDownload, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeDownloadElement: {
        prototype: HTMLCoreprojectShapeDownloadElement;
        new (): HTMLCoreprojectShapeDownloadElement;
    };
    interface HTMLCoreprojectShapeEditElement extends Components.CoreprojectShapeEdit, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeEditElement: {
        prototype: HTMLCoreprojectShapeEditElement;
        new (): HTMLCoreprojectShapeEditElement;
    };
    interface HTMLCoreprojectShapeEmptyUploadElement extends Components.CoreprojectShapeEmptyUpload, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeEmptyUploadElement: {
        prototype: HTMLCoreprojectShapeEmptyUploadElement;
        new (): HTMLCoreprojectShapeEmptyUploadElement;
    };
    interface HTMLCoreprojectShapeExpandElement extends Components.CoreprojectShapeExpand, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeExpandElement: {
        prototype: HTMLCoreprojectShapeExpandElement;
        new (): HTMLCoreprojectShapeExpandElement;
    };
    interface HTMLCoreprojectShapeExploreElement extends Components.CoreprojectShapeExplore, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeExploreElement: {
        prototype: HTMLCoreprojectShapeExploreElement;
        new (): HTMLCoreprojectShapeExploreElement;
    };
    interface HTMLCoreprojectShapeExternalElement extends Components.CoreprojectShapeExternal, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeExternalElement: {
        prototype: HTMLCoreprojectShapeExternalElement;
        new (): HTMLCoreprojectShapeExternalElement;
    };
    interface HTMLCoreprojectShapeExternalLinkElement extends Components.CoreprojectShapeExternalLink, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeExternalLinkElement: {
        prototype: HTMLCoreprojectShapeExternalLinkElement;
        new (): HTMLCoreprojectShapeExternalLinkElement;
    };
    interface HTMLCoreprojectShapeFilterElement extends Components.CoreprojectShapeFilter, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeFilterElement: {
        prototype: HTMLCoreprojectShapeFilterElement;
        new (): HTMLCoreprojectShapeFilterElement;
    };
    interface HTMLCoreprojectShapeForumElement extends Components.CoreprojectShapeForum, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeForumElement: {
        prototype: HTMLCoreprojectShapeForumElement;
        new (): HTMLCoreprojectShapeForumElement;
    };
    interface HTMLCoreprojectShapeFourBoxSquaresElement extends Components.CoreprojectShapeFourBoxSquares, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeFourBoxSquaresElement: {
        prototype: HTMLCoreprojectShapeFourBoxSquaresElement;
        new (): HTMLCoreprojectShapeFourBoxSquaresElement;
    };
    interface HTMLCoreprojectShapeFunnelElement extends Components.CoreprojectShapeFunnel, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeFunnelElement: {
        prototype: HTMLCoreprojectShapeFunnelElement;
        new (): HTMLCoreprojectShapeFunnelElement;
    };
    interface HTMLCoreprojectShapeHeadphoneElement extends Components.CoreprojectShapeHeadphone, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeHeadphoneElement: {
        prototype: HTMLCoreprojectShapeHeadphoneElement;
        new (): HTMLCoreprojectShapeHeadphoneElement;
    };
    interface HTMLCoreprojectShapeHeartElement extends Components.CoreprojectShapeHeart, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeHeartElement: {
        prototype: HTMLCoreprojectShapeHeartElement;
        new (): HTMLCoreprojectShapeHeartElement;
    };
    interface HTMLCoreprojectShapeHomeElement extends Components.CoreprojectShapeHome, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeHomeElement: {
        prototype: HTMLCoreprojectShapeHomeElement;
        new (): HTMLCoreprojectShapeHomeElement;
    };
    interface HTMLCoreprojectShapeHyperlinkElement extends Components.CoreprojectShapeHyperlink, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeHyperlinkElement: {
        prototype: HTMLCoreprojectShapeHyperlinkElement;
        new (): HTMLCoreprojectShapeHyperlinkElement;
    };
    interface HTMLCoreprojectShapeInfoElement extends Components.CoreprojectShapeInfo, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeInfoElement: {
        prototype: HTMLCoreprojectShapeInfoElement;
        new (): HTMLCoreprojectShapeInfoElement;
    };
    interface HTMLCoreprojectShapeItalicElement extends Components.CoreprojectShapeItalic, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeItalicElement: {
        prototype: HTMLCoreprojectShapeItalicElement;
        new (): HTMLCoreprojectShapeItalicElement;
    };
    interface HTMLCoreprojectShapeLanguageElement extends Components.CoreprojectShapeLanguage, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeLanguageElement: {
        prototype: HTMLCoreprojectShapeLanguageElement;
        new (): HTMLCoreprojectShapeLanguageElement;
    };
    interface HTMLCoreprojectShapeListElement extends Components.CoreprojectShapeList, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeListElement: {
        prototype: HTMLCoreprojectShapeListElement;
        new (): HTMLCoreprojectShapeListElement;
    };
    interface HTMLCoreprojectShapeListenElement extends Components.CoreprojectShapeListen, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeListenElement: {
        prototype: HTMLCoreprojectShapeListenElement;
        new (): HTMLCoreprojectShapeListenElement;
    };
    interface HTMLCoreprojectShapeLoginElement extends Components.CoreprojectShapeLogin, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeLoginElement: {
        prototype: HTMLCoreprojectShapeLoginElement;
        new (): HTMLCoreprojectShapeLoginElement;
    };
    interface HTMLCoreprojectShapeLogoElement extends Components.CoreprojectShapeLogo, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeLogoElement: {
        prototype: HTMLCoreprojectShapeLogoElement;
        new (): HTMLCoreprojectShapeLogoElement;
    };
    interface HTMLCoreprojectShapeMaximizeElement extends Components.CoreprojectShapeMaximize, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeMaximizeElement: {
        prototype: HTMLCoreprojectShapeMaximizeElement;
        new (): HTMLCoreprojectShapeMaximizeElement;
    };
    interface HTMLCoreprojectShapeMessageCircleElement extends Components.CoreprojectShapeMessageCircle, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeMessageCircleElement: {
        prototype: HTMLCoreprojectShapeMessageCircleElement;
        new (): HTMLCoreprojectShapeMessageCircleElement;
    };
    interface HTMLCoreprojectShapeMicElement extends Components.CoreprojectShapeMic, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeMicElement: {
        prototype: HTMLCoreprojectShapeMicElement;
        new (): HTMLCoreprojectShapeMicElement;
    };
    interface HTMLCoreprojectShapeMiscElement extends Components.CoreprojectShapeMisc, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeMiscElement: {
        prototype: HTMLCoreprojectShapeMiscElement;
        new (): HTMLCoreprojectShapeMiscElement;
    };
    interface HTMLCoreprojectShapeMoonElement extends Components.CoreprojectShapeMoon, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeMoonElement: {
        prototype: HTMLCoreprojectShapeMoonElement;
        new (): HTMLCoreprojectShapeMoonElement;
    };
    interface HTMLCoreprojectShapeMoreBoxElement extends Components.CoreprojectShapeMoreBox, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeMoreBoxElement: {
        prototype: HTMLCoreprojectShapeMoreBoxElement;
        new (): HTMLCoreprojectShapeMoreBoxElement;
    };
    interface HTMLCoreprojectShapeMoreVerticalElement extends Components.CoreprojectShapeMoreVertical, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeMoreVerticalElement: {
        prototype: HTMLCoreprojectShapeMoreVerticalElement;
        new (): HTMLCoreprojectShapeMoreVerticalElement;
    };
    interface HTMLCoreprojectShapeNextElement extends Components.CoreprojectShapeNext, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeNextElement: {
        prototype: HTMLCoreprojectShapeNextElement;
        new (): HTMLCoreprojectShapeNextElement;
    };
    interface HTMLCoreprojectShapeNotificationsElement extends Components.CoreprojectShapeNotifications, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeNotificationsElement: {
        prototype: HTMLCoreprojectShapeNotificationsElement;
        new (): HTMLCoreprojectShapeNotificationsElement;
    };
    interface HTMLCoreprojectShapePlayElement extends Components.CoreprojectShapePlay, HTMLStencilElement {
    }
    var HTMLCoreprojectShapePlayElement: {
        prototype: HTMLCoreprojectShapePlayElement;
        new (): HTMLCoreprojectShapePlayElement;
    };
    interface HTMLCoreprojectShapePlayCircleElement extends Components.CoreprojectShapePlayCircle, HTMLStencilElement {
    }
    var HTMLCoreprojectShapePlayCircleElement: {
        prototype: HTMLCoreprojectShapePlayCircleElement;
        new (): HTMLCoreprojectShapePlayCircleElement;
    };
    interface HTMLCoreprojectShapePreferenceElement extends Components.CoreprojectShapePreference, HTMLStencilElement {
    }
    var HTMLCoreprojectShapePreferenceElement: {
        prototype: HTMLCoreprojectShapePreferenceElement;
        new (): HTMLCoreprojectShapePreferenceElement;
    };
    interface HTMLCoreprojectShapeReadElement extends Components.CoreprojectShapeRead, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeReadElement: {
        prototype: HTMLCoreprojectShapeReadElement;
        new (): HTMLCoreprojectShapeReadElement;
    };
    interface HTMLCoreprojectShapeRecentElement extends Components.CoreprojectShapeRecent, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeRecentElement: {
        prototype: HTMLCoreprojectShapeRecentElement;
        new (): HTMLCoreprojectShapeRecentElement;
    };
    interface HTMLCoreprojectShapeRefreshElement extends Components.CoreprojectShapeRefresh, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeRefreshElement: {
        prototype: HTMLCoreprojectShapeRefreshElement;
        new (): HTMLCoreprojectShapeRefreshElement;
    };
    interface HTMLCoreprojectShapeRegisterElement extends Components.CoreprojectShapeRegister, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeRegisterElement: {
        prototype: HTMLCoreprojectShapeRegisterElement;
        new (): HTMLCoreprojectShapeRegisterElement;
    };
    interface HTMLCoreprojectShapeScheduleElement extends Components.CoreprojectShapeSchedule, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeScheduleElement: {
        prototype: HTMLCoreprojectShapeScheduleElement;
        new (): HTMLCoreprojectShapeScheduleElement;
    };
    interface HTMLCoreprojectShapeSearchElement extends Components.CoreprojectShapeSearch, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeSearchElement: {
        prototype: HTMLCoreprojectShapeSearchElement;
        new (): HTMLCoreprojectShapeSearchElement;
    };
    interface HTMLCoreprojectShapeSettingsElement extends Components.CoreprojectShapeSettings, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeSettingsElement: {
        prototype: HTMLCoreprojectShapeSettingsElement;
        new (): HTMLCoreprojectShapeSettingsElement;
    };
    interface HTMLCoreprojectShapeShareElement extends Components.CoreprojectShapeShare, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeShareElement: {
        prototype: HTMLCoreprojectShapeShareElement;
        new (): HTMLCoreprojectShapeShareElement;
    };
    interface HTMLCoreprojectShapeSixGridsElement extends Components.CoreprojectShapeSixGrids, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeSixGridsElement: {
        prototype: HTMLCoreprojectShapeSixGridsElement;
        new (): HTMLCoreprojectShapeSixGridsElement;
    };
    interface HTMLCoreprojectShapeStarElement extends Components.CoreprojectShapeStar, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeStarElement: {
        prototype: HTMLCoreprojectShapeStarElement;
        new (): HTMLCoreprojectShapeStarElement;
    };
    interface HTMLCoreprojectShapeStrikeElement extends Components.CoreprojectShapeStrike, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeStrikeElement: {
        prototype: HTMLCoreprojectShapeStrikeElement;
        new (): HTMLCoreprojectShapeStrikeElement;
    };
    interface HTMLCoreprojectShapeTickElement extends Components.CoreprojectShapeTick, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeTickElement: {
        prototype: HTMLCoreprojectShapeTickElement;
        new (): HTMLCoreprojectShapeTickElement;
    };
    interface HTMLCoreprojectShapeTrendingUpElement extends Components.CoreprojectShapeTrendingUp, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeTrendingUpElement: {
        prototype: HTMLCoreprojectShapeTrendingUpElement;
        new (): HTMLCoreprojectShapeTrendingUpElement;
    };
    interface HTMLCoreprojectShapeUnderlineElement extends Components.CoreprojectShapeUnderline, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeUnderlineElement: {
        prototype: HTMLCoreprojectShapeUnderlineElement;
        new (): HTMLCoreprojectShapeUnderlineElement;
    };
    interface HTMLCoreprojectShapeUploadElement extends Components.CoreprojectShapeUpload, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeUploadElement: {
        prototype: HTMLCoreprojectShapeUploadElement;
        new (): HTMLCoreprojectShapeUploadElement;
    };
    interface HTMLCoreprojectShapeUserElement extends Components.CoreprojectShapeUser, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeUserElement: {
        prototype: HTMLCoreprojectShapeUserElement;
        new (): HTMLCoreprojectShapeUserElement;
    };
    interface HTMLCoreprojectShapeVideoElement extends Components.CoreprojectShapeVideo, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeVideoElement: {
        prototype: HTMLCoreprojectShapeVideoElement;
        new (): HTMLCoreprojectShapeVideoElement;
    };
    interface HTMLCoreprojectShapeWarningElement extends Components.CoreprojectShapeWarning, HTMLStencilElement {
    }
    var HTMLCoreprojectShapeWarningElement: {
        prototype: HTMLCoreprojectShapeWarningElement;
        new (): HTMLCoreprojectShapeWarningElement;
    };
    interface HTMLCoreprojectSpecialTopRoundedElement extends Components.CoreprojectSpecialTopRounded, HTMLStencilElement {
    }
    var HTMLCoreprojectSpecialTopRoundedElement: {
        prototype: HTMLCoreprojectSpecialTopRoundedElement;
        new (): HTMLCoreprojectSpecialTopRoundedElement;
    };
    interface HTMLElementTagNameMap {
        "coreproject-logo-anime-core": HTMLCoreprojectLogoAnimeCoreElement;
        "coreproject-logo-discord": HTMLCoreprojectLogoDiscordElement;
        "coreproject-logo-github": HTMLCoreprojectLogoGithubElement;
        "coreproject-logo-reddit": HTMLCoreprojectLogoRedditElement;
        "coreproject-logo-telegram": HTMLCoreprojectLogoTelegramElement;
        "coreproject-shape-add": HTMLCoreprojectShapeAddElement;
        "coreproject-shape-arrow": HTMLCoreprojectShapeArrowElement;
        "coreproject-shape-arrow-up-right": HTMLCoreprojectShapeArrowUpRightElement;
        "coreproject-shape-bold": HTMLCoreprojectShapeBoldElement;
        "coreproject-shape-book-open": HTMLCoreprojectShapeBookOpenElement;
        "coreproject-shape-bookmark": HTMLCoreprojectShapeBookmarkElement;
        "coreproject-shape-caption": HTMLCoreprojectShapeCaptionElement;
        "coreproject-shape-chat": HTMLCoreprojectShapeChatElement;
        "coreproject-shape-chevron": HTMLCoreprojectShapeChevronElement;
        "coreproject-shape-chevron-up-down": HTMLCoreprojectShapeChevronUpDownElement;
        "coreproject-shape-circle": HTMLCoreprojectShapeCircleElement;
        "coreproject-shape-code": HTMLCoreprojectShapeCodeElement;
        "coreproject-shape-cross": HTMLCoreprojectShapeCrossElement;
        "coreproject-shape-delete": HTMLCoreprojectShapeDeleteElement;
        "coreproject-shape-dice": HTMLCoreprojectShapeDiceElement;
        "coreproject-shape-dot": HTMLCoreprojectShapeDotElement;
        "coreproject-shape-double-arrow": HTMLCoreprojectShapeDoubleArrowElement;
        "coreproject-shape-download": HTMLCoreprojectShapeDownloadElement;
        "coreproject-shape-edit": HTMLCoreprojectShapeEditElement;
        "coreproject-shape-empty-upload": HTMLCoreprojectShapeEmptyUploadElement;
        "coreproject-shape-expand": HTMLCoreprojectShapeExpandElement;
        "coreproject-shape-explore": HTMLCoreprojectShapeExploreElement;
        "coreproject-shape-external": HTMLCoreprojectShapeExternalElement;
        "coreproject-shape-external-link": HTMLCoreprojectShapeExternalLinkElement;
        "coreproject-shape-filter": HTMLCoreprojectShapeFilterElement;
        "coreproject-shape-forum": HTMLCoreprojectShapeForumElement;
        "coreproject-shape-four-box-squares": HTMLCoreprojectShapeFourBoxSquaresElement;
        "coreproject-shape-funnel": HTMLCoreprojectShapeFunnelElement;
        "coreproject-shape-headphone": HTMLCoreprojectShapeHeadphoneElement;
        "coreproject-shape-heart": HTMLCoreprojectShapeHeartElement;
        "coreproject-shape-home": HTMLCoreprojectShapeHomeElement;
        "coreproject-shape-hyperlink": HTMLCoreprojectShapeHyperlinkElement;
        "coreproject-shape-info": HTMLCoreprojectShapeInfoElement;
        "coreproject-shape-italic": HTMLCoreprojectShapeItalicElement;
        "coreproject-shape-language": HTMLCoreprojectShapeLanguageElement;
        "coreproject-shape-list": HTMLCoreprojectShapeListElement;
        "coreproject-shape-listen": HTMLCoreprojectShapeListenElement;
        "coreproject-shape-login": HTMLCoreprojectShapeLoginElement;
        "coreproject-shape-logo": HTMLCoreprojectShapeLogoElement;
        "coreproject-shape-maximize": HTMLCoreprojectShapeMaximizeElement;
        "coreproject-shape-message-circle": HTMLCoreprojectShapeMessageCircleElement;
        "coreproject-shape-mic": HTMLCoreprojectShapeMicElement;
        "coreproject-shape-misc": HTMLCoreprojectShapeMiscElement;
        "coreproject-shape-moon": HTMLCoreprojectShapeMoonElement;
        "coreproject-shape-more-box": HTMLCoreprojectShapeMoreBoxElement;
        "coreproject-shape-more-vertical": HTMLCoreprojectShapeMoreVerticalElement;
        "coreproject-shape-next": HTMLCoreprojectShapeNextElement;
        "coreproject-shape-notifications": HTMLCoreprojectShapeNotificationsElement;
        "coreproject-shape-play": HTMLCoreprojectShapePlayElement;
        "coreproject-shape-play-circle": HTMLCoreprojectShapePlayCircleElement;
        "coreproject-shape-preference": HTMLCoreprojectShapePreferenceElement;
        "coreproject-shape-read": HTMLCoreprojectShapeReadElement;
        "coreproject-shape-recent": HTMLCoreprojectShapeRecentElement;
        "coreproject-shape-refresh": HTMLCoreprojectShapeRefreshElement;
        "coreproject-shape-register": HTMLCoreprojectShapeRegisterElement;
        "coreproject-shape-schedule": HTMLCoreprojectShapeScheduleElement;
        "coreproject-shape-search": HTMLCoreprojectShapeSearchElement;
        "coreproject-shape-settings": HTMLCoreprojectShapeSettingsElement;
        "coreproject-shape-share": HTMLCoreprojectShapeShareElement;
        "coreproject-shape-six-grids": HTMLCoreprojectShapeSixGridsElement;
        "coreproject-shape-star": HTMLCoreprojectShapeStarElement;
        "coreproject-shape-strike": HTMLCoreprojectShapeStrikeElement;
        "coreproject-shape-tick": HTMLCoreprojectShapeTickElement;
        "coreproject-shape-trending-up": HTMLCoreprojectShapeTrendingUpElement;
        "coreproject-shape-underline": HTMLCoreprojectShapeUnderlineElement;
        "coreproject-shape-upload": HTMLCoreprojectShapeUploadElement;
        "coreproject-shape-user": HTMLCoreprojectShapeUserElement;
        "coreproject-shape-video": HTMLCoreprojectShapeVideoElement;
        "coreproject-shape-warning": HTMLCoreprojectShapeWarningElement;
        "coreproject-special-top-rounded": HTMLCoreprojectSpecialTopRoundedElement;
    }
}
declare namespace LocalJSX {
    interface CoreprojectLogoAnimeCore {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectLogoDiscord {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectLogoGithub {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectLogoReddit {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectLogoTelegram {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeAdd {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "variant"?: 'outline' | 'fill';
        "width"?: string;
    }
    interface CoreprojectShapeArrow {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "variant"?: 'outline' | 'fill';
        "width"?: string;
    }
    interface CoreprojectShapeArrowUpRight {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeBold {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeBookOpen {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "variant"?: 'open' | 'outline';
        "width"?: string;
    }
    interface CoreprojectShapeBookmark {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeCaption {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeChat {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeChevron {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeChevronUpDown {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeCircle {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeCode {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeCross {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeDelete {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeDice {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeDot {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeDoubleArrow {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeDownload {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeEdit {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "variant"?: 'with_underline_around_pencil' | 'without_underline_around_pencil';
        "width"?: string;
    }
    interface CoreprojectShapeEmptyUpload {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "variant"?: 'with_underline_around_pencil' | 'without_underline_around_pencil';
        "width"?: string;
    }
    interface CoreprojectShapeExpand {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeExplore {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeExternal {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeExternalLink {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeFilter {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeForum {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeFourBoxSquares {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeFunnel {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeHeadphone {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeHeart {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeHome {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeHyperlink {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeInfo {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeItalic {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeLanguage {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeList {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeListen {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeLogin {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeLogo {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeMaximize {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "variant"?: 'inward' | 'outward';
        "width"?: string;
    }
    interface CoreprojectShapeMessageCircle {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeMic {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeMisc {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeMoon {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeMoreBox {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeMoreVertical {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeNext {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeNotifications {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapePlay {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapePlayCircle {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapePreference {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeRead {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeRecent {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeRefresh {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeRegister {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeSchedule {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeSearch {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeSettings {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "varient"?: 'filled' | 'outline';
        "width"?: string;
    }
    interface CoreprojectShapeShare {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeSixGrids {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeStar {
        "_style"?: { [key: string]: string };
        "fill_color"?: string;
        "height"?: string;
        "variant"?: 'empty' | 'half' | 'full';
        "width"?: string;
    }
    interface CoreprojectShapeStrike {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeTick {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeTrendingUp {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeUnderline {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeUpload {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeUser {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeVideo {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectShapeWarning {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface CoreprojectSpecialTopRounded {
        "_style"?: { [key: string]: string };
        "height"?: string;
        "width"?: string;
    }
    interface IntrinsicElements {
        "coreproject-logo-anime-core": CoreprojectLogoAnimeCore;
        "coreproject-logo-discord": CoreprojectLogoDiscord;
        "coreproject-logo-github": CoreprojectLogoGithub;
        "coreproject-logo-reddit": CoreprojectLogoReddit;
        "coreproject-logo-telegram": CoreprojectLogoTelegram;
        "coreproject-shape-add": CoreprojectShapeAdd;
        "coreproject-shape-arrow": CoreprojectShapeArrow;
        "coreproject-shape-arrow-up-right": CoreprojectShapeArrowUpRight;
        "coreproject-shape-bold": CoreprojectShapeBold;
        "coreproject-shape-book-open": CoreprojectShapeBookOpen;
        "coreproject-shape-bookmark": CoreprojectShapeBookmark;
        "coreproject-shape-caption": CoreprojectShapeCaption;
        "coreproject-shape-chat": CoreprojectShapeChat;
        "coreproject-shape-chevron": CoreprojectShapeChevron;
        "coreproject-shape-chevron-up-down": CoreprojectShapeChevronUpDown;
        "coreproject-shape-circle": CoreprojectShapeCircle;
        "coreproject-shape-code": CoreprojectShapeCode;
        "coreproject-shape-cross": CoreprojectShapeCross;
        "coreproject-shape-delete": CoreprojectShapeDelete;
        "coreproject-shape-dice": CoreprojectShapeDice;
        "coreproject-shape-dot": CoreprojectShapeDot;
        "coreproject-shape-double-arrow": CoreprojectShapeDoubleArrow;
        "coreproject-shape-download": CoreprojectShapeDownload;
        "coreproject-shape-edit": CoreprojectShapeEdit;
        "coreproject-shape-empty-upload": CoreprojectShapeEmptyUpload;
        "coreproject-shape-expand": CoreprojectShapeExpand;
        "coreproject-shape-explore": CoreprojectShapeExplore;
        "coreproject-shape-external": CoreprojectShapeExternal;
        "coreproject-shape-external-link": CoreprojectShapeExternalLink;
        "coreproject-shape-filter": CoreprojectShapeFilter;
        "coreproject-shape-forum": CoreprojectShapeForum;
        "coreproject-shape-four-box-squares": CoreprojectShapeFourBoxSquares;
        "coreproject-shape-funnel": CoreprojectShapeFunnel;
        "coreproject-shape-headphone": CoreprojectShapeHeadphone;
        "coreproject-shape-heart": CoreprojectShapeHeart;
        "coreproject-shape-home": CoreprojectShapeHome;
        "coreproject-shape-hyperlink": CoreprojectShapeHyperlink;
        "coreproject-shape-info": CoreprojectShapeInfo;
        "coreproject-shape-italic": CoreprojectShapeItalic;
        "coreproject-shape-language": CoreprojectShapeLanguage;
        "coreproject-shape-list": CoreprojectShapeList;
        "coreproject-shape-listen": CoreprojectShapeListen;
        "coreproject-shape-login": CoreprojectShapeLogin;
        "coreproject-shape-logo": CoreprojectShapeLogo;
        "coreproject-shape-maximize": CoreprojectShapeMaximize;
        "coreproject-shape-message-circle": CoreprojectShapeMessageCircle;
        "coreproject-shape-mic": CoreprojectShapeMic;
        "coreproject-shape-misc": CoreprojectShapeMisc;
        "coreproject-shape-moon": CoreprojectShapeMoon;
        "coreproject-shape-more-box": CoreprojectShapeMoreBox;
        "coreproject-shape-more-vertical": CoreprojectShapeMoreVertical;
        "coreproject-shape-next": CoreprojectShapeNext;
        "coreproject-shape-notifications": CoreprojectShapeNotifications;
        "coreproject-shape-play": CoreprojectShapePlay;
        "coreproject-shape-play-circle": CoreprojectShapePlayCircle;
        "coreproject-shape-preference": CoreprojectShapePreference;
        "coreproject-shape-read": CoreprojectShapeRead;
        "coreproject-shape-recent": CoreprojectShapeRecent;
        "coreproject-shape-refresh": CoreprojectShapeRefresh;
        "coreproject-shape-register": CoreprojectShapeRegister;
        "coreproject-shape-schedule": CoreprojectShapeSchedule;
        "coreproject-shape-search": CoreprojectShapeSearch;
        "coreproject-shape-settings": CoreprojectShapeSettings;
        "coreproject-shape-share": CoreprojectShapeShare;
        "coreproject-shape-six-grids": CoreprojectShapeSixGrids;
        "coreproject-shape-star": CoreprojectShapeStar;
        "coreproject-shape-strike": CoreprojectShapeStrike;
        "coreproject-shape-tick": CoreprojectShapeTick;
        "coreproject-shape-trending-up": CoreprojectShapeTrendingUp;
        "coreproject-shape-underline": CoreprojectShapeUnderline;
        "coreproject-shape-upload": CoreprojectShapeUpload;
        "coreproject-shape-user": CoreprojectShapeUser;
        "coreproject-shape-video": CoreprojectShapeVideo;
        "coreproject-shape-warning": CoreprojectShapeWarning;
        "coreproject-special-top-rounded": CoreprojectSpecialTopRounded;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "coreproject-logo-anime-core": LocalJSX.CoreprojectLogoAnimeCore & JSXBase.HTMLAttributes<HTMLCoreprojectLogoAnimeCoreElement>;
            "coreproject-logo-discord": LocalJSX.CoreprojectLogoDiscord & JSXBase.HTMLAttributes<HTMLCoreprojectLogoDiscordElement>;
            "coreproject-logo-github": LocalJSX.CoreprojectLogoGithub & JSXBase.HTMLAttributes<HTMLCoreprojectLogoGithubElement>;
            "coreproject-logo-reddit": LocalJSX.CoreprojectLogoReddit & JSXBase.HTMLAttributes<HTMLCoreprojectLogoRedditElement>;
            "coreproject-logo-telegram": LocalJSX.CoreprojectLogoTelegram & JSXBase.HTMLAttributes<HTMLCoreprojectLogoTelegramElement>;
            "coreproject-shape-add": LocalJSX.CoreprojectShapeAdd & JSXBase.HTMLAttributes<HTMLCoreprojectShapeAddElement>;
            "coreproject-shape-arrow": LocalJSX.CoreprojectShapeArrow & JSXBase.HTMLAttributes<HTMLCoreprojectShapeArrowElement>;
            "coreproject-shape-arrow-up-right": LocalJSX.CoreprojectShapeArrowUpRight & JSXBase.HTMLAttributes<HTMLCoreprojectShapeArrowUpRightElement>;
            "coreproject-shape-bold": LocalJSX.CoreprojectShapeBold & JSXBase.HTMLAttributes<HTMLCoreprojectShapeBoldElement>;
            "coreproject-shape-book-open": LocalJSX.CoreprojectShapeBookOpen & JSXBase.HTMLAttributes<HTMLCoreprojectShapeBookOpenElement>;
            "coreproject-shape-bookmark": LocalJSX.CoreprojectShapeBookmark & JSXBase.HTMLAttributes<HTMLCoreprojectShapeBookmarkElement>;
            "coreproject-shape-caption": LocalJSX.CoreprojectShapeCaption & JSXBase.HTMLAttributes<HTMLCoreprojectShapeCaptionElement>;
            "coreproject-shape-chat": LocalJSX.CoreprojectShapeChat & JSXBase.HTMLAttributes<HTMLCoreprojectShapeChatElement>;
            "coreproject-shape-chevron": LocalJSX.CoreprojectShapeChevron & JSXBase.HTMLAttributes<HTMLCoreprojectShapeChevronElement>;
            "coreproject-shape-chevron-up-down": LocalJSX.CoreprojectShapeChevronUpDown & JSXBase.HTMLAttributes<HTMLCoreprojectShapeChevronUpDownElement>;
            "coreproject-shape-circle": LocalJSX.CoreprojectShapeCircle & JSXBase.HTMLAttributes<HTMLCoreprojectShapeCircleElement>;
            "coreproject-shape-code": LocalJSX.CoreprojectShapeCode & JSXBase.HTMLAttributes<HTMLCoreprojectShapeCodeElement>;
            "coreproject-shape-cross": LocalJSX.CoreprojectShapeCross & JSXBase.HTMLAttributes<HTMLCoreprojectShapeCrossElement>;
            "coreproject-shape-delete": LocalJSX.CoreprojectShapeDelete & JSXBase.HTMLAttributes<HTMLCoreprojectShapeDeleteElement>;
            "coreproject-shape-dice": LocalJSX.CoreprojectShapeDice & JSXBase.HTMLAttributes<HTMLCoreprojectShapeDiceElement>;
            "coreproject-shape-dot": LocalJSX.CoreprojectShapeDot & JSXBase.HTMLAttributes<HTMLCoreprojectShapeDotElement>;
            "coreproject-shape-double-arrow": LocalJSX.CoreprojectShapeDoubleArrow & JSXBase.HTMLAttributes<HTMLCoreprojectShapeDoubleArrowElement>;
            "coreproject-shape-download": LocalJSX.CoreprojectShapeDownload & JSXBase.HTMLAttributes<HTMLCoreprojectShapeDownloadElement>;
            "coreproject-shape-edit": LocalJSX.CoreprojectShapeEdit & JSXBase.HTMLAttributes<HTMLCoreprojectShapeEditElement>;
            "coreproject-shape-empty-upload": LocalJSX.CoreprojectShapeEmptyUpload & JSXBase.HTMLAttributes<HTMLCoreprojectShapeEmptyUploadElement>;
            "coreproject-shape-expand": LocalJSX.CoreprojectShapeExpand & JSXBase.HTMLAttributes<HTMLCoreprojectShapeExpandElement>;
            "coreproject-shape-explore": LocalJSX.CoreprojectShapeExplore & JSXBase.HTMLAttributes<HTMLCoreprojectShapeExploreElement>;
            "coreproject-shape-external": LocalJSX.CoreprojectShapeExternal & JSXBase.HTMLAttributes<HTMLCoreprojectShapeExternalElement>;
            "coreproject-shape-external-link": LocalJSX.CoreprojectShapeExternalLink & JSXBase.HTMLAttributes<HTMLCoreprojectShapeExternalLinkElement>;
            "coreproject-shape-filter": LocalJSX.CoreprojectShapeFilter & JSXBase.HTMLAttributes<HTMLCoreprojectShapeFilterElement>;
            "coreproject-shape-forum": LocalJSX.CoreprojectShapeForum & JSXBase.HTMLAttributes<HTMLCoreprojectShapeForumElement>;
            "coreproject-shape-four-box-squares": LocalJSX.CoreprojectShapeFourBoxSquares & JSXBase.HTMLAttributes<HTMLCoreprojectShapeFourBoxSquaresElement>;
            "coreproject-shape-funnel": LocalJSX.CoreprojectShapeFunnel & JSXBase.HTMLAttributes<HTMLCoreprojectShapeFunnelElement>;
            "coreproject-shape-headphone": LocalJSX.CoreprojectShapeHeadphone & JSXBase.HTMLAttributes<HTMLCoreprojectShapeHeadphoneElement>;
            "coreproject-shape-heart": LocalJSX.CoreprojectShapeHeart & JSXBase.HTMLAttributes<HTMLCoreprojectShapeHeartElement>;
            "coreproject-shape-home": LocalJSX.CoreprojectShapeHome & JSXBase.HTMLAttributes<HTMLCoreprojectShapeHomeElement>;
            "coreproject-shape-hyperlink": LocalJSX.CoreprojectShapeHyperlink & JSXBase.HTMLAttributes<HTMLCoreprojectShapeHyperlinkElement>;
            "coreproject-shape-info": LocalJSX.CoreprojectShapeInfo & JSXBase.HTMLAttributes<HTMLCoreprojectShapeInfoElement>;
            "coreproject-shape-italic": LocalJSX.CoreprojectShapeItalic & JSXBase.HTMLAttributes<HTMLCoreprojectShapeItalicElement>;
            "coreproject-shape-language": LocalJSX.CoreprojectShapeLanguage & JSXBase.HTMLAttributes<HTMLCoreprojectShapeLanguageElement>;
            "coreproject-shape-list": LocalJSX.CoreprojectShapeList & JSXBase.HTMLAttributes<HTMLCoreprojectShapeListElement>;
            "coreproject-shape-listen": LocalJSX.CoreprojectShapeListen & JSXBase.HTMLAttributes<HTMLCoreprojectShapeListenElement>;
            "coreproject-shape-login": LocalJSX.CoreprojectShapeLogin & JSXBase.HTMLAttributes<HTMLCoreprojectShapeLoginElement>;
            "coreproject-shape-logo": LocalJSX.CoreprojectShapeLogo & JSXBase.HTMLAttributes<HTMLCoreprojectShapeLogoElement>;
            "coreproject-shape-maximize": LocalJSX.CoreprojectShapeMaximize & JSXBase.HTMLAttributes<HTMLCoreprojectShapeMaximizeElement>;
            "coreproject-shape-message-circle": LocalJSX.CoreprojectShapeMessageCircle & JSXBase.HTMLAttributes<HTMLCoreprojectShapeMessageCircleElement>;
            "coreproject-shape-mic": LocalJSX.CoreprojectShapeMic & JSXBase.HTMLAttributes<HTMLCoreprojectShapeMicElement>;
            "coreproject-shape-misc": LocalJSX.CoreprojectShapeMisc & JSXBase.HTMLAttributes<HTMLCoreprojectShapeMiscElement>;
            "coreproject-shape-moon": LocalJSX.CoreprojectShapeMoon & JSXBase.HTMLAttributes<HTMLCoreprojectShapeMoonElement>;
            "coreproject-shape-more-box": LocalJSX.CoreprojectShapeMoreBox & JSXBase.HTMLAttributes<HTMLCoreprojectShapeMoreBoxElement>;
            "coreproject-shape-more-vertical": LocalJSX.CoreprojectShapeMoreVertical & JSXBase.HTMLAttributes<HTMLCoreprojectShapeMoreVerticalElement>;
            "coreproject-shape-next": LocalJSX.CoreprojectShapeNext & JSXBase.HTMLAttributes<HTMLCoreprojectShapeNextElement>;
            "coreproject-shape-notifications": LocalJSX.CoreprojectShapeNotifications & JSXBase.HTMLAttributes<HTMLCoreprojectShapeNotificationsElement>;
            "coreproject-shape-play": LocalJSX.CoreprojectShapePlay & JSXBase.HTMLAttributes<HTMLCoreprojectShapePlayElement>;
            "coreproject-shape-play-circle": LocalJSX.CoreprojectShapePlayCircle & JSXBase.HTMLAttributes<HTMLCoreprojectShapePlayCircleElement>;
            "coreproject-shape-preference": LocalJSX.CoreprojectShapePreference & JSXBase.HTMLAttributes<HTMLCoreprojectShapePreferenceElement>;
            "coreproject-shape-read": LocalJSX.CoreprojectShapeRead & JSXBase.HTMLAttributes<HTMLCoreprojectShapeReadElement>;
            "coreproject-shape-recent": LocalJSX.CoreprojectShapeRecent & JSXBase.HTMLAttributes<HTMLCoreprojectShapeRecentElement>;
            "coreproject-shape-refresh": LocalJSX.CoreprojectShapeRefresh & JSXBase.HTMLAttributes<HTMLCoreprojectShapeRefreshElement>;
            "coreproject-shape-register": LocalJSX.CoreprojectShapeRegister & JSXBase.HTMLAttributes<HTMLCoreprojectShapeRegisterElement>;
            "coreproject-shape-schedule": LocalJSX.CoreprojectShapeSchedule & JSXBase.HTMLAttributes<HTMLCoreprojectShapeScheduleElement>;
            "coreproject-shape-search": LocalJSX.CoreprojectShapeSearch & JSXBase.HTMLAttributes<HTMLCoreprojectShapeSearchElement>;
            "coreproject-shape-settings": LocalJSX.CoreprojectShapeSettings & JSXBase.HTMLAttributes<HTMLCoreprojectShapeSettingsElement>;
            "coreproject-shape-share": LocalJSX.CoreprojectShapeShare & JSXBase.HTMLAttributes<HTMLCoreprojectShapeShareElement>;
            "coreproject-shape-six-grids": LocalJSX.CoreprojectShapeSixGrids & JSXBase.HTMLAttributes<HTMLCoreprojectShapeSixGridsElement>;
            "coreproject-shape-star": LocalJSX.CoreprojectShapeStar & JSXBase.HTMLAttributes<HTMLCoreprojectShapeStarElement>;
            "coreproject-shape-strike": LocalJSX.CoreprojectShapeStrike & JSXBase.HTMLAttributes<HTMLCoreprojectShapeStrikeElement>;
            "coreproject-shape-tick": LocalJSX.CoreprojectShapeTick & JSXBase.HTMLAttributes<HTMLCoreprojectShapeTickElement>;
            "coreproject-shape-trending-up": LocalJSX.CoreprojectShapeTrendingUp & JSXBase.HTMLAttributes<HTMLCoreprojectShapeTrendingUpElement>;
            "coreproject-shape-underline": LocalJSX.CoreprojectShapeUnderline & JSXBase.HTMLAttributes<HTMLCoreprojectShapeUnderlineElement>;
            "coreproject-shape-upload": LocalJSX.CoreprojectShapeUpload & JSXBase.HTMLAttributes<HTMLCoreprojectShapeUploadElement>;
            "coreproject-shape-user": LocalJSX.CoreprojectShapeUser & JSXBase.HTMLAttributes<HTMLCoreprojectShapeUserElement>;
            "coreproject-shape-video": LocalJSX.CoreprojectShapeVideo & JSXBase.HTMLAttributes<HTMLCoreprojectShapeVideoElement>;
            "coreproject-shape-warning": LocalJSX.CoreprojectShapeWarning & JSXBase.HTMLAttributes<HTMLCoreprojectShapeWarningElement>;
            "coreproject-special-top-rounded": LocalJSX.CoreprojectSpecialTopRounded & JSXBase.HTMLAttributes<HTMLCoreprojectSpecialTopRoundedElement>;
        }
    }
}
